objective of this programe is to create a model, convert the model complex(models object) query into native python datatype --> 

--> then convert it into JSON --> then send the json to frontend 

we will be using simple view function and not any built in DRF function 


Step 1 --
Create GS1 project --> created api app --> created model as Student --> register model in admin.py file 

Step 2 --
Create a serializer in serilizers.py file in api app. StudentSerializers will have same fields like model.py and it is same like Django
forms.

Step 3 --
To use serializer , we will have to add logic in the views.py file
#imported required files 

from django.shortcuts import render
from .models import Student
from .serializers import StudentSerializer
from rest_framework.renderers import JSONRenderer
from django.http import HttpResponse
# Model object -- Single student data 

# function based view example to get one object from student model
def student_detail(request):
    stu = Student.objects.get(id=1) # we created model object which was a comples data 
    serializer = StudentSerializer(stu) # converted to python data object 
    json_data  = JSONRenderer().render(serializer.data) # serialized data will be stored in data variable passed here . Python data  converted to json
    # we have to now send the json data as response to client
    return HttpResponse(json_data, content_type='application/json')

Step 4 --
To test the response 
hit the local host url with end point as stuinfo 
http://127.0.0.1:8000/stuinfo
our view in the line above as id set to 1, which will pull the data stored at id 1 from model 
output - {"name":"shweta","roll":201,"city":"pune"}
every data is in double qoute, which means this is a json format 